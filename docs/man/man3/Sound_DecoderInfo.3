.TH "Sound_DecoderInfo" 3 "Thu Jan 23 2014" "Version 1.0.1" "SDL_sound" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Sound_DecoderInfo \- 
.PP
Information about available soudn decoders\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SDL_sound\&.h>\fP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "const char ** \fBextensions\fP"
.br
.ti -1c
.RI "const char * \fBdescription\fP"
.br
.ti -1c
.RI "const char * \fBauthor\fP"
.br
.ti -1c
.RI "const char * \fBurl\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Information about available soudn decoders\&. 

Each decoder sets up one of these structs, which can be retrieved via the \fBSound_AvailableDecoders()\fP function\&. EVERY FIELD IN THIS IS READ-ONLY\&.
.PP
The extensions field is a NULL-terminated list of ASCIZ strings\&. You should read it like this:
.PP
.PP
.nf
const char **ext;
for (ext = info->extensions; *ext != NULL; ext++) {
    printf('   File extension \'%s\'\n', *ext);
}
.fi
.PP
.PP
\fBSee Also:\fP
.RS 4
\fBSound_AvailableDecoders\fP 
.RE
.PP

.SH "Field Documentation"
.PP 
.SS "const char* Sound_DecoderInfo::author"
'Name Of Author \\<email@emailhost\&.dom\\>' 
.SS "const char* Sound_DecoderInfo::description"
Human readable description of decoder\&. 
.SS "const char** Sound_DecoderInfo::extensions"
File extensions, list ends with NULL\&. 
.SS "const char* Sound_DecoderInfo::url"
URL specific to this decoder\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for SDL_sound from the source code\&.
